name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
      - name: Install Node.js with NVM
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
          nvm install 14  # Install the desired Node.js version
          nvm use 14      # Use the installed Node.js version

      - name: Start Your Project with Yarn
        run: |
          yarn 
        working-directory: ./
      - name: Build with Yarn
        run: |
          git remote set-url origin https://smruthi-sreenivas:${{ secrets.GITHUB_TOKEN }}@github.com/smruthi-sreenivas/smruthi-sreenivas.github.io/
          git config --global user.name 'Smruthi S'
          git config --global user.email 'smruthi.kukku.s@gmail.com'
          export NODE_OPTIONS=--openssl-legacy-provider
          set NODE_OPTIONS=--openssl-legacy-provider
          npx browserslist@latest --update-db
          yarn run build
        working-directory: ./  

      - name: Deploy to GitHub Pages
        id: deployment
        run: |
          yarn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build_and_deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
           trigger: .deploy gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
